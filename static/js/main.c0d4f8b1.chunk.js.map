{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["Searchbar","className","onSubmit","e","props","type","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","state","onClick","openLargeImage","target","dataLarge","src","this","alt","large","ImageGalary","pics","map","pic","webformatURL","largeImageURL","id","Button","window","scrollTo","top","document","documentElement","scrollHeight","behavior","handler","handleKeyDown","code","toggleModal","handleClosing","currentTarget","addEventListener","removeEventListener","App","searchQuery","showModal","modalImage","showLoader","currentPage","getPics","query","page","url","axios","get","then","response","saveToState","setState","prevState","loaderHandler","newPicsArr","responseHits","data","hits","length","alert","preventDefault","resetState","searchQueryValue","value","reset","modalPic","link","modalOpener","loadMore","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c0d4f8b1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={(e) => this.props.onSubmit(e)}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  static propTypes = {\r\n    src: PropTypes.string,\r\n    alt: PropTypes.string,\r\n    large: PropTypes.string,\r\n    openLargeImage: PropTypes.func,\r\n  };\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          onClick={(e) => {\r\n            this.props.openLargeImage(e.target.dataLarge);\r\n          }}\r\n          src={this.props.src}\r\n          alt={this.props.alt}\r\n          dataLarge={this.props.large}\r\n          className=\"ImageGalleryItem-image\"\r\n          openLargeImage={this.props.openLargeImage}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nexport default class ImageGalary extends Component {\r\n  static propTypes = {\r\n    pics: PropTypes.array,\r\n    openLargeImage: PropTypes.func,\r\n  };\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        {this.props.pics.map((pic) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              openLargeImage={this.props.openLargeImage}\r\n              key={pic.id}\r\n              src={pic.webformatURL}\r\n              alt={pic.webformatURL}\r\n              data-large={pic.largeImageURL}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Button extends Component {\r\n  static propTypes = {\r\n    handler: PropTypes.func,\r\n  };\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n    return (\r\n      <button\r\n        className=\"Button\"\r\n        type=\"button\"\r\n        onClick={(e) => this.props.handler()}\r\n      >\r\n        Load More\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  static propTypes = {\r\n    src: PropTypes.string,\r\n    toggleModal: PropTypes.func,\r\n  };\r\n\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n\r\n  handleClosing = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          <img src={this.props.src} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal/Modal\";\n\nexport default class App extends Component {\n  state = {\n    searchQuery: \"\",\n    pics: [],\n    showModal: false,\n    modalImage: \"\",\n    showLoader: false,\n    currentPage: 1,\n  };\n\n  componentDidMount() {}\n\n  loaderHandler() {\n    this.setState((prevState) => ({\n      showLoader: !prevState.showLoader,\n    }));\n  }\n\n  getPics = (query, page) => {\n    const key = \"23098764-6c28342abea29650d4f55356c\";\n    let url = `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\n\n    axios.get(url).then((response) => {\n      this.saveToState(response);\n      this.setState((prevState) => ({\n        currentPage: prevState.currentPage + 1,\n      }));\n      this.loaderHandler();\n    });\n  };\n\n  saveToState = (response) => {\n    let newPicsArr = [];\n    const responseHits = response.data.hits;\n    if (responseHits.length === 0) {\n      alert(`Write something correct`);\n    }\n    newPicsArr = [...this.state.pics, ...responseHits];\n    this.setState(({ pics }) => ({ pics: newPicsArr }));\n  };\n\n  resetState() {\n    this.setState({\n      searchQuery: \"\",\n      pics: [],\n      showModal: false,\n      modalPic: \"\",\n      currentPage: 1,\n    });\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.resetState();\n    this.loaderHandler();\n    const searchQueryValue = e.target[1].value;\n    this.setState({ searchQuery: searchQueryValue });\n    const page = 1;\n    this.getPics(searchQueryValue, page);\n    e.target.reset();\n  };\n\n  loadMore() {\n    const cat = \"cat\";\n    const number = 2;\n    this.getPics(cat, number);\n  }\n\n  modalOpener(link) {\n    this.toggleModal();\n    this.setState(({ modalPic }) => ({ modalPic: link }));\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onSubmit} />\n        <ImageGallery\n          pics={this.state.pics}\n          openLargeImage={this.modalOpener}\n        />\n        {this.state.searchQuery !== \"\" && <Button handler={this.loadMore} />}\n        {this.state.showLoader && (\n          <Loader\n            className=\"spin\"\n            type=\"Bars\"\n            color=\"#00BFFF\"\n            height={800}\n            width={80}\n          />\n        )}\n        {this.state.showModal && (\n          <Modal toggleModal={this.toggleModal} src={this.state.modalPic} />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}